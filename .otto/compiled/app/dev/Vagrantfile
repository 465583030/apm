# Generated by Otto, do not edit!
#
# This is the Vagrantfile generated by Otto for the development of
# this application/service. It should not be hand-edited. To modify the
# Vagrantfile, use the Appfile.

Vagrant.configure("2") do |config|
  config.vm.box = "hashicorp/precise64"
  config.vm.provider :parallels do |p, o|
    o.vm.box = "parallels/ubuntu-12.04"
  end

  # Host only network
  config.vm.network "private_network", ip: "100.126.205.45"

  
  # Setup a synced folder from our working directory to /vagrant
  config.vm.synced_folder '/Users/mauriciobanduk/go/src/github.com/topfreegames/apm', "/opt/gopath/src/github.com/topfreegames/apm",
    owner: "vagrant", group: "vagrant"


  # Enable SSH agent forwarding so getting private dependencies works
  config.ssh.forward_agent = true

  # Foundation configuration (if any)
  

  # Load all our fragments here for any dependencies.
  

  # This is to work around some bugs right now
  ["vmware_fusion", "vmware_workstation"].each do |name|
    config.vm.provider(name) do |p|
      p.enable_vmrun_ip_lookup = false
    end
  end

  
  
  # Disable the default synced folder
  config.vm.synced_folder ".", "/vagrant", disabled: true
  

  # Install Go build environment
  config.vm.provision "shell", inline: $script_golang

  # Make it so that `vagrant ssh` goes directly to the correct dir
  config.vm.provision "shell", inline:
    %Q[echo "cd /opt/gopath/src/github.com/topfreegames/apm" >> /home/vagrant/.bashrc]

end


$script_golang = <<SCRIPT
set -e

oe() { $@ 2>&1 | logger -t otto > /dev/null; }
ol() { echo "[otto] $@"; }

# If we have Go, then do nothing
if command -v go >/dev/null 2>&1; then
    ol "Go already installed! Otto won't install Go."
    exit 0
fi

ol "Downloading Go 1.5.1..."
oe wget -q -O /home/vagrant/go.tar.gz https://storage.googleapis.com/golang/go1.5.1.linux-amd64.tar.gz

ol "Untarring Go..."
oe sudo tar -C /usr/local -xzf /home/vagrant/go.tar.gz

ol "Making GOPATH..."
oe sudo mkdir -p /opt/gopath
fstype=$(find /opt/gopath -mindepth 0 -maxdepth 0 -type d -printf "%F")
find /opt/gopath -fstype ${fstype} -print0 | xargs -0 -n 100 chown vagrant:vagrant

ol "Setting up PATH..."
echo 'export PATH=/opt/gopath/bin:/usr/local/go/bin:$PATH' >> /home/vagrant/.bashrc
echo 'export GOPATH=/opt/gopath' >> /home/vagrant/.bashrc

ol "Installing VCSs for go get..."
oe sudo apt-get update -y
oe sudo apt-get install -y git bzr mercurial

ol "Configuring Go to use SSH instead of HTTP..."
git config --global url."git@github.com:".insteadOf "https://github.com/"
SCRIPT

